{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PrivateRoute.js","routers/PrublicRoute.js","routers/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducers.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endPoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","event","start","moment","toDate","end","eventLoaded","type","payload","eventAddNew","eventCleanActiveEvent","eventUpdated","eventDeleted","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","padding","Modal","setAppElement","now","minutes","seconds","add","endDate","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","text","icon","trim","length","id","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","disabled","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","color","onDoubleClickEvent","onSelectEvent","onSelectSlot","selectable","onView","view","components","PrivateRoute","isLoggedIn","Component","component","rest","props","to","PrublicRoute","AppRouter","checking","path","exact","rootReducers","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"oPACMA,EAAUC,8CAEVC,EAAgB,SAACC,EAAUC,GAA0B,IAApBC,EAAmB,uDAAV,MAEtCC,EAAG,UAAMN,EAAN,YAAiBG,GAE1B,MAAe,QAAXE,EACOE,MAAMD,GAENC,MAAMD,EAAK,CACdD,SACAG,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUP,MAK3BQ,EAAgB,SAACT,EAAUC,GAA0B,IAApBC,EAAmB,uDAAV,MAEtCC,EAAG,UAAMN,EAAN,YAAiBG,GACpBU,EAAQC,aAAaC,QAAQ,UAAY,GAE/C,MAAe,QAAXV,EACOE,MAAMD,EAAK,CACdD,SACAG,QAAS,CACL,UAAWK,KAIZN,MAAMD,EAAK,CACdD,SACAG,QAAS,CACL,eAAgB,mBAChB,UAAWK,GAEfJ,KAAMC,KAAKC,UAAUP,MCvCpBY,EACI,kBADJA,EAEK,mBAFLA,EAII,kBAJJA,EAKO,qBALPA,EAQI,wBARJA,EASI,iCATJA,EAWc,uBAXdA,EAYI,uBAZJA,EAaK,uBAbLA,EAgBW,oCAhBXA,EAkBE,eAlBFA,EAqBG,gB,wBCnBHC,EAAgB,WAAkB,IAAjBC,EAAgB,uDAAP,GACnC,OAAOA,EAAOC,KAAI,SAAAC,GAAK,kCAChBA,GADgB,IAEnBC,MAAOC,IAAOF,EAAMC,OAAOE,SAC3BC,IAAKF,IAAOF,EAAMI,KAAKD,eCqEzBE,EAAc,SAACP,GAAD,MAAa,CAAEQ,KAAMV,EAAmBW,QAAST,IAC/DU,EAAc,SAACR,GAAD,MAAY,CAAEM,KAAMV,EAAmBW,QAASP,IAEvDS,EAAwB,iBAAO,CAAEH,KAAMV,IAC9Cc,EAAe,SAACV,GAAD,MACjB,CACIM,KAAMV,EACNW,QAASP,IAGXW,EAAe,iBAAO,CAAEL,KAAMV,ICxB9BgB,EAAiB,iBAAO,CAAEN,KAAMV,IAEhCiB,EAAQ,SAACC,GAAD,MAAW,CACrBR,KAAMV,EACNW,QAASO,IAGAC,EAAc,WACvB,OAAO,SAACC,GACJtB,aAAauB,QACbD,EAASE,KACTF,EDc0B,CAAEV,KAAMV,MCVpCsB,EAAS,iBAAO,CAAEZ,KAAMV,I,gBCzEjBuB,EAAU,WAA0B,IAAxBC,EAAuB,uDAAR,GAAQ,EAEhBC,mBAASD,GAFO,mBAErCE,EAFqC,KAE7BC,EAF6B,KAItCC,EAAQ,WACVD,EAAWH,IAITK,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEzBH,EAAU,2BACHD,GADE,kBAEHI,EAAOC,KAAQD,EAAOE,UAKhC,MAAO,CAAEN,EAAQG,EAAmBD,ICd3BK,G,MAAc,WAEvB,IAAMb,EAAWc,cAFY,EAIqBX,EAAQ,CACtDY,OAAQ,GACRC,UAAW,KANc,mBAItBC,EAJsB,KAILC,EAJK,OAQ2Bf,EAAQ,CAC5DgB,MAAO,GACPC,OAAQ,GACRC,WAAY,GACZC,WAAY,KAZa,mBAQtBC,EARsB,KAQFC,EARE,KAcrBT,EAAsBE,EAAtBF,OAAQC,EAAcC,EAAdD,UAEZG,EAIAI,EAJAJ,MACAC,EAGAG,EAHAH,OACAC,EAEAE,EAFAF,WACAC,EACAC,EADAD,WAeJ,OACI,qBAAKG,UAAU,4BAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,wBAAf,UACI,yCACA,uBAAMC,SAjBF,SAACC,GFtBC,IAACC,EAAOC,EEuB1BF,EAAEG,iBACF9B,GFxBmB4B,EEwBCb,EFxBMc,EEwBEb,EFvBhC,uCAAO,WAAOhB,GAAP,iBAAA+B,EAAA,sEACgBjE,EAAc,OAAQ,CAAE8D,QAAOC,YAAY,QAD3D,cACGG,EADH,gBAEgBA,EAAKC,OAFrB,QAEG5D,EAFH,QAGM6D,IACLxD,aAAayD,QAAQ,QAAS9D,EAAKI,OACnCC,aAAayD,QAAQ,mBAAmB,IAAIC,MAAOC,WACnDrC,EAASH,EAAM,CACXyC,IAAKjE,EAAKiE,IACV3B,KAAMtC,EAAKsC,SAGf4B,IAAKC,KAAK,QAASnE,EAAKoE,KAAO,oBAAkB,SAXlD,2CAAP,yDEsCgB,UACI,qBAAKhB,UAAU,aAAf,SACI,uBACInC,KAAK,OACLmC,UAAU,eACViB,YAAY,SACZ/B,KAAK,SACLC,MAAOG,EACP4B,SAAUzB,MAGlB,qBAAKO,UAAU,aAAf,SACI,uBACInC,KAAK,WACLmC,UAAU,eACViB,YAAY,gBACZ/B,KAAK,YACLC,MAAOI,EACP2B,SAAUzB,MAGlB,qBAAKO,UAAU,aAAf,SACI,uBACInC,KAAK,SACLmC,UAAU,YACVb,MAAM,kBAMtB,sBAAKa,UAAU,wBAAf,UACI,0CACA,uBAAMC,SA9CC,SAACC,GAEpB,GADAA,EAAEG,iBACET,IAAeC,EACf,OAAOiB,IAAKC,KAAK,QAAS,uCAAqC,SFZ9C,IAACZ,EAAOC,EAAUlB,EEcvCX,GFdsB4B,EEcCR,EFdMS,EEcER,EFdQV,EEcIQ,EFb/C,uCAAO,WAAOnB,GAAP,iBAAA+B,EAAA,sEACgBjE,EAAc,WAAY,CAAE8D,QAAOC,WAAUlB,QAAQ,QADrE,cACGqB,EADH,gBAEgBA,EAAKC,OAFrB,QAEG5D,EAFH,QAGM6D,IACLxD,aAAayD,QAAQ,QAAS9D,EAAKI,OACnCC,aAAayD,QAAQ,mBAAmB,IAAIC,MAAOC,WACnDrC,EAASH,EAAM,CACXyC,IAAKjE,EAAKiE,IACV3B,KAAMtC,EAAKsC,SAGf4B,IAAKC,KAAK,QAASnE,EAAKoE,KAAO,oBAAkB,SAXlD,2CAAP,yDEsDgB,UACI,qBAAKhB,UAAU,aAAf,SACI,uBACInC,KAAK,OACLmC,UAAU,eACViB,YAAY,SACZ/B,KAAK,QACLC,MAAOO,EACPwB,SAAUnB,MAIlB,qBAAKC,UAAU,aAAf,SACI,uBACInC,KAAK,QACLmC,UAAU,eACViB,YAAY,SACZ/B,KAAK,SACLC,MAAOQ,EACPuB,SAAUnB,MAGlB,qBAAKC,UAAU,aAAf,SACI,uBACInC,KAAK,WACLmC,UAAU,eACViB,YAAY,gBACZ/B,KAAK,aACLC,MAAOS,EACPsB,SAAUnB,MAIlB,qBAAKC,UAAU,aAAf,SACI,uBACInC,KAAK,WACLmC,UAAU,eACViB,YAAY,0BACZ/B,KAAK,aACLC,MAAOU,EACPqB,SAAUnB,MAIlB,qBAAKC,UAAU,aAAf,SACI,uBACInC,KAAK,SACLmC,UAAU,YACVb,MAAM,gC,QC3HzBgC,G,YAAS,WAElB,IAAM5C,EAAWc,cACTH,EAASkC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAApCpC,KAMR,OACI,sBAAKc,UAAU,kCAAf,UACI,sBAAMA,UAAU,eAAhB,SACKd,IAEL,yBAAQc,UAAU,yBAAyBuB,QAT9B,WACjBhD,EAASD,MAQL,UACI,mBAAG0B,UAAU,wBACb,kDCpBHwB,EAAW,CACpBC,OAAQ,iBACRC,SAAU,IACVC,KAAM,IACNC,MAAO,MACPC,MAAO,MACPC,KAAM,SACNC,IAAK,SACLC,OAAQ,SACRC,KAAM,QACNC,KAAM,OACN3E,MAAO,SACP4E,gBAAiB,+BACjBC,SAAU,SAAAC,GAAK,8BAAkBA,EAAlB,OCXNC,EAAgB,SAAC,GAAe,IAAb/E,EAAY,EAAZA,MAEpBgF,EAAgBhF,EAAhBgF,MAAOlE,EAASd,EAATc,KAEf,OACI,gCACI,mCAASkE,EAAT,OACA,qCAAQlE,EAAKa,Y,mCCPZsD,GAAc,iBAAO,CAAE3E,KAAMV,ICOpCsF,GAAe,CACjBC,QAAS,CACLC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,wBACXC,QAAS,oBAGjBC,IAAMC,cAAc,SAEpB,IAAMC,GAAM3F,MAAS4F,QAAQ,GAAGC,QAAQ,GAAGC,IAAI,EAAG,SAC5CC,GAAUJ,GAAIK,QAAQF,IAAI,EAAG,SAC7BG,GAAY,CACdnB,MAAO,GACPoB,MAAO,GACPnG,MAAO4F,GAAI1F,SACXC,IAAK6F,GAAQ9F,UAGJkG,GAAgB,WAEzB,IAAMrF,EAAWc,cACTwE,EAAczC,aAAY,SAAAC,GAAK,OAAIA,EAAMyC,MAAzCD,UACAE,EAAgB3C,aAAY,SAAAC,GAAK,OAAIA,EAAM2C,YAA3CD,YAJuB,EAKGnF,mBAASwE,GAAI1F,UALhB,mBAKxBuG,EALwB,KAKbC,EALa,OAMDtF,mBAAS4E,GAAQ9F,UANhB,mBAMxByG,EANwB,KAMfC,EANe,OAOKxF,oBAAS,GAPd,mBAOxByF,EAPwB,KAOZC,EAPY,OAQK1F,mBAAS8E,IARd,mBAQxBa,EARwB,KAQZC,EARY,KASvBb,EAA6BY,EAA7BZ,MAAOpB,EAAsBgC,EAAtBhC,MAAO/E,EAAe+G,EAAf/G,MAAOG,EAAQ4G,EAAR5G,IAE7B8G,qBAAU,WACFV,GACAS,EAAcT,GACdG,EAAaH,EAAYvG,OACzB4G,EAAWL,EAAYpG,OAEvBuG,EAAad,GAAI1F,UACjB0G,EAAWZ,GAAQ9F,UACnB8G,EAAcd,OAEnB,CAACK,EAAaS,IAEjB,IAAMxF,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACzBuF,EAAc,2BAEHD,GAFE,kBAGJtF,EAAOC,KAAOD,EAAOE,UAI5BuF,EAAa,WACfnG,ED5D2B,CAAEV,KAAMV,IC6DnCoB,EAASP,KACTwG,EAAcd,IACdQ,EAAad,GAAI1F,UACjB0G,EAAWZ,GAAQ9F,WAiDvB,OAEI,eAAC,IAAD,CACIiH,OAAQd,EACRe,eAAgBF,EAChBG,MAAOpC,GACPqC,eAAgB,IAChB9E,UAAU,QACV+E,iBAAiB,cANrB,UAQI,mCAAOhB,EAAe,gBAAkB,qBAAxC,OACA,uBACA,uBAAM/D,UAAU,YAAYC,SAzCX,SAACC,GACtBA,EAAEG,iBAEF,IAAM2E,EAAcvH,IAAOD,GACrByH,EAAYxH,IAAOE,GAEzB,GAAIqH,EAAYE,cAAcD,GAC1BnE,IAAKC,KAAK,CACNwB,MAAO,QACP4C,KAAM,mDACNC,KAAM,cAJd,CAQA,GAAI7C,EAAM8C,OAAOC,OAAS,EACtB,OAAOhB,GAAc,GR7DA,IAAC/G,EQkEtBgB,EADAwF,GRjEsBxG,EQkEKgH,ERjEnC,uCAAO,WAAOhG,GAAP,iBAAA+B,EAAA,+EAGoBvD,EAAc,UAAD,OAAWQ,EAAMgI,IAAMhI,EAAO,OAH/D,cAGOgD,EAHP,gBAIoBA,EAAKC,OAJzB,QAIO5D,EAJP,QAKU6D,GACLlC,EAASN,EAAaV,IAEtBuD,IAAKC,KAAK,QAASnE,EAAKoE,IAAK,SARlC,kDAWCwE,QAAQC,IAAR,MAXD,0DAAP,uDApC4B,SAAClI,GAC7B,8CAAO,WAAOgB,EAAUmH,GAAjB,uBAAApF,EAAA,wEAEuBoF,IAAWpE,KAAzBT,EAFT,EAESA,IAAK3B,EAFd,EAEcA,KAFd,SAGoBnC,EAAc,SAAUQ,EAAO,QAHnD,cAGOgD,EAHP,gBAIoBA,EAAKC,OAJzB,QAIO5D,EAJP,QAMU6D,KACLlD,EAAMgI,GAAK3I,EAAK+I,OAAOJ,GACvBhI,EAAMc,KAAO,CACTuH,IAAK/E,EACL3B,KAAMA,GAEVX,EAASR,EAAYR,KAZ1B,kDAeCiI,QAAQC,IAAR,MAfD,0DAAP,wDQsGiBI,CAAiBtB,IAG9BD,GAAc,GACdI,MAeI,UAEI,sBAAK1E,UAAU,aAAf,UACI,wDACA,cAAC,KAAD,CACIkB,SAhEU,SAAChB,GAC3BgE,EAAahE,GACbsE,EAAc,2BAEHD,GAFE,IAGL/G,MAAO0C,MA4DCf,MAAO8E,EACPjE,UAAU,oBAIlB,sBAAKA,UAAU,aAAf,UACI,qDACA,cAAC,KAAD,CACIkB,SAhEQ,SAAChB,GACzBkE,EAAWlE,GACXsE,EAAc,2BAEHD,GAFE,IAGL5G,IAAKuC,MA4DGf,MAAOgF,EACP2B,QAAS7B,EACTjE,UAAU,oBAIlB,uBACA,sBAAKA,UAAU,aAAf,UACI,mDACA,uBACInC,KAAK,OACLmC,UAAS,wBAAmBqE,GAAc,cAC1CpD,YAAY,uBACZ/B,KAAK,QACL6G,aAAa,MACb5G,MAAOoD,EACPrB,SAAUlC,IAEd,uBAAOuG,GAAG,YAAYvF,UAAU,uBAAhC,yCAGJ,sBAAKA,UAAU,aAAf,UACI,0BACInC,KAAK,OACLmC,UAAU,eACViB,YAAY,QACZ+E,KAAK,IACL9G,KAAK,QACLC,MAAOwE,EACPzC,SAAUlC,IAEd,uBAAOuG,GAAG,YAAYvF,UAAU,uBAAhC,yCAGJ,yBACInC,KAAK,SACLmC,UAAU,oCAFd,UAII,mBAAGA,UAAU,gBACb,sDClLPiG,GAAY,WAErB,IAAM1H,EAAWc,cACT0E,EAAgB3C,aAAY,SAAAC,GAAK,OAAIA,EAAM2C,YAA3CD,YAMR,OACI,wBAAQ/D,UAAU,sBAAsBkG,SAAUnC,EAAaxC,QAL3C,WACpBhD,EAASiE,OAIT,SACI,mBAAGxC,UAAU,mBCXZmG,GAAiB,WAE1B,IAAM5H,EAAWc,cAMjB,OACI,yBAAQW,UAAU,4BAA4BuB,QAL7B,WACjBhD,EVkDJ,uCAAO,WAAOA,EAAUmH,GAAjB,mBAAApF,EAAA,sEAESiF,EAAOG,IAAW1B,SAASD,YAA3BwB,GAFT,SAGoBxI,EAAc,UAAD,OAAWwI,GAAM,GAAI,UAHtD,cAGOhF,EAHP,gBAIoBA,EAAKC,OAJzB,QAIO5D,EAJP,QAKU6D,GACLlC,EAASL,KAET4C,IAAKC,KAAK,QAASnE,EAAKoE,IAAK,SARlC,kDAWCwE,QAAQC,IAAR,MAXD,0DAAP,0DU9CI,UACI,mBAAGzF,UAAU,iBACb,uDCCZvC,IAAO2I,OAAO,MACd,IAAMC,GAAYC,YAAgB7I,KAGrB8I,GAAiB,WAE1B,IAAMhI,EAAWc,cAFe,EAGA+B,aAAY,SAAAC,GAAK,OAAIA,EAAM2C,YAAnD3G,EAHwB,EAGxBA,OAAQ0G,EAHgB,EAGhBA,YACRlD,EAAQO,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAnCT,IAJwB,EAKAjC,mBAAS3B,aAAaC,QAAQ,aAAe,SAL7C,mBAKzBsJ,EALyB,KAKfC,EALe,KAOhChC,qBAAU,WACNlG,EXAJ,uCAAO,WAAOA,GAAP,qBAAA+B,EAAA,+EAEoBvD,EAAc,UAFlC,cAEOwD,EAFP,gBAGoBA,EAAKC,OAHzB,OAGO5D,EAHP,OAIS8J,EAAY9J,EAAZ8J,QACFrJ,EAASD,EAAcsJ,GAC7BnI,EAASX,EAAYP,IANtB,kDAQCmI,QAAQC,IAAR,MARD,0DAAP,yDWCG,CAAClH,IA8BJ,OACI,sBAAKyB,UAAU,kBAAf,UACI,cAAC,EAAD,IACA,cAAC,IAAD,CACIqG,UAAWA,GACXhJ,OAAQA,EACRsJ,cAAc,QACdC,YAAY,MACZpF,SAAUA,EACVqF,gBA1Ba,SAACtJ,EAAOC,EAAOG,EAAKmJ,GAQzC,MAAO,CACHjC,MARU,CACVkC,gBAAkBlG,IAAQtD,EAAMc,KAAKuH,IAAO,UAAY,UACxDoB,aAAc,MACdC,QAAS,GACTC,MAAO,QACPjE,QAAS,qBAqBLkE,mBAtCU,SAACjH,GACnB3B,EAASiE,OAsCD4E,cApCY,SAAClH,GACrB3B,EX0CkC,CAAEV,KAAMV,EAAsBW,QW1CxCoC,KAoChBmH,aAhBW,SAACnH,GACpB3B,EAASP,MAgBDsJ,YAAY,EACZC,OApCS,SAACrH,GAClBjD,aAAayD,QAAQ,WAAYR,GACjCuG,EAAYvG,IAmCJsH,KAAMhB,EACNiB,WAAY,CAAElK,MAAO+E,KAEzB,cAAC,GAAD,IAEIyB,GACA,cAAC,GAAD,IAEJ,cAAC,GAAD,Q,SC9EC2D,GAAe,SAAC,GAItB,IAHHC,EAGE,EAHFA,WACWC,EAET,EAFFC,UACGC,EACD,2CACF,OACI,cAAC,IAAD,2BAAWA,GAAX,IAAiBD,UACb,SAACE,GAAD,OACKJ,EACK,cAACC,EAAD,eAAeG,IACf,cAAC,IAAD,CAAUC,GAAG,gBCVtBC,GAAe,SAAC,GAItB,IAHHN,EAGE,EAHFA,WACWC,EAET,EAFFC,UACGC,EACD,2CACF,OACI,cAAC,IAAD,2BACQA,GADR,IACcD,UACN,SAACE,GAAD,OACMJ,EAEI,cAAC,IAAD,CAAUK,GAAG,MADb,cAACJ,EAAD,SCLbM,GAAY,WAErB,IAAM3J,EAAWc,cAFU,EAGD+B,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAA7C6G,EAHmB,EAGnBA,SAAUtH,EAHS,EAGTA,IAMlB,OAJA4D,qBAAU,WACNlG,Eb2BJ,uCAAO,WAAOA,GAAP,iBAAA+B,EAAA,sEAEgBvD,EAAc,aAAc,IAF5C,cAEGwD,EAFH,gBAGgBA,EAAKC,OAHrB,QAGG5D,EAHH,QAKM6D,IACLxD,aAAayD,QAAQ,QAAS9D,EAAKI,OACnCC,aAAayD,QAAQ,mBAAmB,IAAIC,MAAOC,WACnDrC,EAASH,EAAM,CACXyC,IAAKjE,EAAKiE,IACV3B,KAAMtC,EAAKsC,SAIfX,EAASJ,KAdV,2CAAP,yDa1BG,CAACI,IAEA4J,EACO,6CAIP,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,GAAD,CACIC,KAAK,SACLP,UAAWzI,EACXuI,aAAc9G,IAElB,cAAC,GAAD,CACIwH,OAAK,EACLD,KAAK,IACLP,UAAWtB,GACXoB,aAAc9G,IAElB,cAAC,IAAD,CAAUmH,GAAG,Y,kBClCvBrJ,GAAe,CACjBwJ,UAAU,G,SCWRxJ,GAAe,CACjBtB,OAAQ,GACR0G,YAAa,MCfXpF,GAAe,CACjBkF,WAAW,GCGFyE,GAAeC,aAAgB,CACxCzE,GDDqB,WAAmC,IAAlCzC,EAAiC,uDAAzB1C,GAAc6J,EAAW,uCACvD,OAAQA,EAAO3K,MACX,KAAKV,EACD,OAAO,2BACAkE,GADP,IAEIwC,WAAW,IAEnB,KAAK1G,EACD,OAAO,2BACAkE,GADP,IAEIwC,WAAW,IAEnB,QACI,OAAOxC,ICXf2C,SFY2B,WAAmC,IAAlC3C,EAAiC,uDAAzB1C,GAAc6J,EAAW,uCAC7D,OAAQA,EAAO3K,MACX,KAAKV,EACD,OAAO,2BACAkE,GADP,IAEIhE,OAAO,GAAD,oBAAMgE,EAAMhE,QAAZ,CAAoBmL,EAAO1K,YAEzC,KAAKX,EACD,OAAO,2BACAkE,GADP,IAEI0C,YAAayE,EAAO1K,UAE5B,KAAKX,EACD,OAAO,2BACAkE,GADP,IAEI0C,YAAa,OAErB,KAAK5G,EACD,OAAO,2BACAkE,GADP,IAEIhE,OAAQgE,EAAMhE,OAAOC,KAAI,SAAAC,GAAK,OAC1BA,EAAMgI,KAAOiD,EAAO1K,QAAQyH,GACtBiD,EAAO1K,QACPP,OAGlB,KAAKJ,EACD,OAAO,2BACAkE,GADP,IAEIhE,OAAQgE,EAAMhE,OAAOoL,QAAO,SAAAlL,GAAK,OAC7BA,EAAMgI,KAAOlE,EAAM0C,YAAYwB,MAEnCxB,YAAa,OAErB,KAAK5G,EACD,OAAO,2BACAkE,GADP,IAEIhE,OAAO,aAAKmL,EAAO1K,WAE3B,KAAKX,EACD,OAAO,2BACAkE,GADP,IAEI0C,YAAa,KACb1G,OAAQ,KAEhB,QACI,OAAOgE,IEzDfC,KHAuB,WAAmC,IAAlCD,EAAiC,uDAAzB1C,GAAc6J,EAAW,uCACzD,OAAQA,EAAO3K,MACX,KAAKV,EACD,OAAO,uCACAkE,GACAmH,EAAO1K,SAFd,IAGIqK,UAAU,IAElB,KAAKhL,EACD,OAAO,2BACAkE,GADP,IAEI8G,UAAU,IAElB,KAAKhL,EACD,MAAO,CACHgL,UAAU,GAElB,QACI,OAAO9G,MItBbqH,GAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,KAE9FC,GAAQC,aACjBT,GACAI,GACIM,aAAgBC,QCJXC,GAAc,WACvB,OACI,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACI,cAAC,GAAD,O,OCHZK,IAASC,OACP,cAAC,GAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.0a4b244d.chunk.js","sourcesContent":["\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = (endPoint, data, method = 'GET') => {\r\n    \r\n    const url = `${baseUrl}/${endPoint}`\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\n\r\nconst fetchConToken = (endPoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endPoint}`\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","export const types = {\r\n    uiOpenModal: '[UI] Open Modal',\r\n    uiCloseModal: '[UI] Close Modal',\r\n\r\n    eventAddNew: '[EVENT] Add new',\r\n    eventSetACtive: '[EVENT] Set Active',\r\n\r\n    eventStartAddNew: '[EVENT] Start new event',\r\n    eventLoaded: '[EVENT] Loaded events',\r\n    eventLogout: '[EVENT] Logout cleaning events',\r\n\r\n    eventCleanActiveEvent: '[EVENT] Clean Active',\r\n    eventUpdate: '[EVENT] Update event',\r\n    eventDeleted: '[EVENT] Delete event',\r\n\r\n    authChecking: '[AUTH] Checkin login state',\r\n    authCheckingFinish: '[AUTH] Finish checkin login state',\r\n    authStartLogin: '[AUTH] Start login',\r\n    authLogin: '[AUTH] Login',\r\n    authStartRegister: '[AUTH] Start register',\r\n    authStartTokenRenew: '[AUTH] Start token renew',\r\n    authLogout: '[AUTH] Logout',\r\n}","import moment from 'moment';\r\n\r\nexport const prepareEvents = (events = []) => {\r\n    return events.map(event => ({\r\n        ...event,\r\n        start: moment(event.start).toDate(),\r\n        end: moment(event.end).toDate()\r\n    }));\r\n}","import Swal from 'sweetalert2';\r\nimport { fetchConToken } from '../helpers/fetch';\r\nimport { prepareEvents } from '../helpers/prepareEvents';\r\nimport { types } from '../types/types'\r\n\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const { uid, name } = getState().auth;\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                dispatch(eventAddNew(event));\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n            const { eventos } = body;\r\n            const events = prepareEvents(eventos);\r\n            dispatch(eventLoaded(events));\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const eventStartUpdated = (event) => {\r\n    return async (dispatch) => {\r\n        try {\r\n\r\n            const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json();\r\n            if (body.ok) {\r\n                dispatch(eventUpdated(event));\r\n            } else {\r\n                Swal.fire('error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const eventStartDeleted = () => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const { id } = getState().calendar.activeEvent;\r\n            const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n            if (body.ok) {\r\n                dispatch(eventDeleted());\r\n            } else {\r\n                Swal.fire('error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({ type: types.eventLoaded, payload: events });\r\nconst eventAddNew = (event) => ({ type: types.eventAddNew, payload: event });\r\nexport const eventSetActice = (event) => ({ type: types.eventSetACtive, payload: event });\r\nexport const eventCleanActiveEvent = () => ({ type: types.eventCleanActiveEvent });\r\nconst eventUpdated = (event) => (\r\n    {\r\n        type: types.eventUpdate,\r\n        payload: event\r\n    }\r\n);\r\nconst eventDeleted = () => ({ type: types.eventDeleted });\r\nexport const eventLogout = () => ({ type: types.eventLogout });","\r\nimport Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken('auth', { email, password }, 'POST');\r\n        const body = await resp.json();\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            Swal.fire('Error', body.msg || 'Algo salió mal', 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken('auth/new', { email, password, name }, 'POST');\r\n        const body = await resp.json();\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            Swal.fire('Error', body.msg || 'Algo salió mal', 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchConToken('auth/renew', {});\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            // Swal.fire('Error', body.msg, 'error');\r\n            dispatch(checkingFinish());\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(logout());\r\n        dispatch(eventLogout());\r\n    }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout });","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        lEmail: '',\r\n        lPassword: ''\r\n    });\r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        rName: '',\r\n        rEmail: '',\r\n        rPassword1: '',\r\n        rPassword2: ''\r\n    });\r\n    const { lEmail, lPassword } = formLoginValues;\r\n    const {\r\n        rName,\r\n        rEmail,\r\n        rPassword1,\r\n        rPassword2,\r\n    } = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail, lPassword));\r\n    }\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        if (rPassword1 !== rPassword2) {\r\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error');\r\n        }\r\n        dispatch(startRegister(rEmail, rPassword1, rName));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector(state => state.auth);\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n    \r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n            <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n\r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong>{title} </strong>\r\n            <span> {user.name}</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal })\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal })","import React, { useEffect, useState } from 'react';\r\nimport moment from 'moment';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventCleanActiveEvent, eventStartAddNew, eventStartUpdated } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        padding: '10px 0px 50px 0'\r\n    }\r\n};\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst endDate = now.clone().add(1, 'hours');\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: endDate.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { modalOpen } = useSelector(state => state.ui)\r\n    const { activeEvent } = useSelector(state => state.calendar)\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(endDate.toDate());\r\n    const [titleValid, setTitleValid] = useState(true);\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if (activeEvent) {\r\n            setFormValues(activeEvent);\r\n            setDateStart(activeEvent.start);\r\n            setDateEnd(activeEvent.end);\r\n        } else {\r\n            setDateStart(now.toDate());\r\n            setDateEnd(endDate.toDate());\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [activeEvent, setFormValues])\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues(\r\n            {\r\n                ...formValues,\r\n                [target.name]: target.value\r\n            }\r\n        )\r\n    }\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal())\r\n        dispatch(eventCleanActiveEvent());\r\n        setFormValues(initEvent);\r\n        setDateStart(now.toDate());\r\n        setDateEnd(endDate.toDate());\r\n    }\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e);\r\n        setFormValues(\r\n            {\r\n                ...formValues,\r\n                start: e\r\n            }\r\n        )\r\n    }\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues(\r\n            {\r\n                ...formValues,\r\n                end: e\r\n            }\r\n        )\r\n    }\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            Swal.fire({\r\n                title: 'Error',\r\n                text: 'La fecha fin debe ser mayor a la fecha de inicio',\r\n                icon: 'error'\r\n            })\r\n            return;\r\n        }\r\n        if (title.trim().length < 2) {\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        // todo realizar grabación\r\n        if (activeEvent) {\r\n            dispatch(eventStartUpdated(formValues));\r\n        } else {\r\n            dispatch(eventStartAddNew(formValues));\r\n        }\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> {(activeEvent) ? 'Editar evento' : 'Crear nuevo evento'} </h1>\r\n            <hr />\r\n            <form className=\"container\" onSubmit={handleSubmitForm}>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={dateEnd}\r\n                        minDate={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { activeEvent } = useSelector(state => state.calendar);\r\n\r\n    const handlePlusClick = () => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    return (\r\n        <button className=\"btn btn-primary fab\" disabled={activeEvent} onClick={handlePlusClick}>\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDeleted } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch(eventStartDeleted());\r\n    }\r\n\r\n    return (\r\n        <button className=\"btn btn-danger fab-danger\" onClick={handleDelete}>\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar Evento </span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventCleanActiveEvent, eventSetActice, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment) // or globalizeLocalizer\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector(state => state.calendar);\r\n    const { uid } = useSelector(state => state.auth);\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading());\r\n    }, [dispatch]);\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n    const onSelectedEvent = (e) => {\r\n        dispatch(eventSetActice(e));\r\n    }\r\n    const onViewChange = (e) => {\r\n        localStorage.setItem('lastView', e);\r\n        setLastView(e);\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            color: 'white',\r\n            padding: '3px 0px 3px 3px'\r\n        }\r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n    const onSelectedSlot = (e) => {\r\n        dispatch(eventCleanActiveEvent());\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectedEvent}\r\n                onSelectSlot={onSelectedSlot}\r\n                selectable={true}\r\n                onView={onViewChange}\r\n                view={lastView}\r\n                components={{ event: CalendarEvent }}\r\n            />\r\n            <AddNewFab />\r\n            {\r\n                activeEvent &&\r\n                <DeleteEventFab />\r\n            }\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n    isLoggedIn,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest} component={\r\n            (props) => (\r\n                (isLoggedIn)\r\n                    ? <Component {...props} />\r\n                    : <Redirect to=\"/login\" />\r\n            )\r\n        } />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrublicRoute = ({\r\n    isLoggedIn,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route\r\n            {...rest} component={\r\n                (props) => (\r\n                    (!isLoggedIn)\r\n                        ? <Component />\r\n                        : <Redirect to=\"/\" />\r\n                )\r\n            }\r\n        />\r\n    )\r\n}\r\nPrublicRoute.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom'\r\nimport { startChecking } from '../actions/auth'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen'\r\nimport { PrivateRoute } from './PrivateRoute'\r\nimport { PrublicRoute } from './PrublicRoute'\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n    }, [dispatch]);\r\n\r\n    if (checking) {\r\n        return <h5>Espere.....</h5>\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <PrublicRoute\r\n                    path=\"/login\"\r\n                    component={LoginScreen}\r\n                    isLoggedIn={!!uid}\r\n                />\r\n                <PrivateRoute\r\n                    exact\r\n                    path=\"/\"\r\n                    component={CalendarScreen}\r\n                    isLoggedIn={!!uid}\r\n                />\r\n                <Redirect to=\"/\" />\r\n            </Switch>\r\n        </ Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false,\r\n            };\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types';\r\n\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title: 'Cumple',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     bgcolor: '#fafafafa',\r\n//     user: {\r\n//         _id: '231',\r\n//         name: 'test'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n}\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [...state.events, action.payload]\r\n            };\r\n        case types.eventSetACtive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            };\r\n        case types.eventCleanActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            };\r\n        case types.eventUpdate:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(event =>\r\n                    event.id === action.payload.id\r\n                        ? action.payload\r\n                        : event\r\n                )\r\n            };\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(event =>\r\n                    event.id !== state.activeEvent.id\r\n                ),\r\n                activeEvent: null\r\n            };\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            };\r\n        case types.eventLogout:\r\n            return {\r\n                ...state,\r\n                activeEvent: null,\r\n                events: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            };\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer'\r\n\r\nexport const rootReducers = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n});","import { applyMiddleware, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducers } from '../reducers/rootReducers';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}